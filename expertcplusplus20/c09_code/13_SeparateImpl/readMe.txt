이 프로젝트에서 사용된 기법을
핌플 기법 (private implementation idiom)  또는 브릿지 패턴이라고 부른다.

인터페이스의 헤더 선언 구현부를 별도 객체로 분리함으로써, 인터페이스 변경으로 인한 빌드 범위를 축소한다.

빌드 시간 단축을 장점으로 들기도 하지만
외부에 제공되는 라이브러리의 선언부에 적용할 때 가장 유용하다.

라이브러리를 업데이트 할 때, 선언부의 변경 사항을 숨길 수 있어, 
라이브러리를 가져다 쓰는 프로젝트들의 빌드 의존성을 최소화하거나 없앨 수 있기 때문이다.

static library 로 배포할 경우에는 빌드 자체는 필요하나, 선언부 변경으로 인한 컴파일 에러를 우려할 필요가 없다.
dynamic library 로 배포하는 경우에는 빌드 없이, binary 배포만으로 업데이트를 진행할 수 있다.